// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String
  slug             String            @unique(map: "recipe_slug_idx")
  collections       String[]          @default([])
  images           String[]          @default([])
  servings         Int?
  handsOnTime      Int?
  handsOffTime     Int?
  instructions     String[]          @default([])
  notes            String?
  createdAt        DateTime          @default(now()) @db.Timestamp(6)
  //relationships
  ingredients      Ingredient[]
  nutritionalValue NutritionalValue?
  source           Source?
  variants         RecipeVariant[]
}

model RecipeVariant {
  id               String            @id @default(uuid()) @db.Uuid
  name             String
  recipe           Recipe            @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId         String            @db.Uuid
  ingredients      Ingredient[]
  nutritionalValue NutritionalValue?
}

model Ingredient {
  id     String  @id @default(uuid()) @db.Uuid
  name   String
  amount String?

  recipe   Recipe? @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String? @db.Uuid

  variant   RecipeVariant? @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId String?        @db.Uuid
}

model NutritionalValue {
  id       String  @id @default(uuid()) @db.Uuid
  kcal     Int
  carbs    Int
  fat      Int
  protein  Int
  recipe   Recipe? @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String? @unique @db.Uuid

  variant   RecipeVariant? @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId String?        @unique @db.Uuid
}

model Source {
  id       String @id @default(uuid()) @db.Uuid
  name     String
  url      String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String @unique @db.Uuid
}
